{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Azure region to which the Azure Function and associated resources will be deployed."
			}
		},
		"name": {
			"type": "string",
			"metadata": {
				"description": "Name for Azure Function and associated resources."
			}
		},
		"tenantId": {
			"type": "securestring",
			"defaultValue": "[subscription().tenantId]",
			"metadata": {
				"description": "Azure AD tenant ID to which this deployment applies. Default value is the tenant ID of the target Subscription."
			}
		},
		"privateDnsSubscriptionId": {
			"type": "securestring",
			"defaultValue": "[subscription().subscriptionId]",
			"metadata": {
				"description": "ID of the Subscription which contains your environment's private DNS zones."
			}
		},
		"privateDnsResourceGroupName": {
			"type": "securestring",
			"metadata": {
				"description": "Name of the Resource Group which contains your environment's private DNS zones."
			}
		},
		"defaultPrivateDnsZone": {
			"type": "securestring",
			"metadata": {
				"description": "The name of your private DNS zone for Azure VMs and internal load balancers. (Ex: azure.company.net)"
			}
		},
		"hostnameTagName": {
			"type": "securestring",
			"defaultValue": "hostname",
			"metadata": {
				"description": "Tag name to use for specifying hostnames on Network Interface resources."
			}
		},
		"zipPackageUrl": {
			"type": "string",
			"defaultValue": "https://github.com/rjygraham/PrivateDnsFunctions/releases/download/latest/Rgom.PrivateDns.Functions.zip",
			"metadata": {
				"description": "URL to MSDeploy zip file of the code in this repo"
			}
		}
	},
	"variables": {
		"appInsightsName": "[concat(parameters('name'), '-insights')]",
		"appInsightsResourceId": "[resourceId('microsoft.insights/components', variables('appInsightsName'))]",
		"functionAppName": "[concat(parameters('name'), '-func')]",
		"functionAppResourceId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
		"hostingPlanName": "[concat(parameters('name'), '-hostingplan')]",
		"hostingPlanResourceId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
		"keyVaultName": "[concat(parameters('name'), '-kvlt')]",
		"keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
		"storageAccountName": "[toLower(concat(replace(parameters('name'), '-', ''), 'stg'))]",
		"storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
		"appSettings": {
			"AppInsightsInstrumentationKey": "AppInsightsInstrumentationKey",
			"AppInsightsConnectionString": "AppInsightsConnectionString",
			"AzureWebJobsStorage": "AzureWebJobsStorage",
			"WebSiteContentAzureFileConnectionString": "WebSiteContentAzureFileConnectionString",
			"TenantId": "TenantId",
			"PrivateDnsSubscriptionId": "PrivateDnsSubscriptionId",
			"PrivateDnsResourceGroupName": "PrivateDnsResourceGroupName",
			"DefaultPrivateDnsZone": "DefaultPrivateDnsZone",
			"HostnameTagName": "HostnameTagName"
		}
	},
	"resources": [
		{
			"type": "microsoft.insights/components",
			"apiVersion": "2015-05-01",
			"name": "[variables('appInsightsName')]",
			"location": "[parameters('location')]",
			"properties": {
				"ApplicationId": "[parameters('name')]"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-06-01",
			"name": "[variables('storageAccountName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard_LRS"
			},
			"properties": {
				"supportsHttpsTrafficOnly": true
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-02-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Y1",
				"tier": "Dynamic"
			},
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"computeMode": "Dynamic"
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-11-01",
			"name": "[variables('functionAppName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('appInsightsResourceId')]",
				"[variables('hostingPlanResourceId')]",
				"[variables('storageAccountResourceId')]"
			],
			"identity": {
				"type": "SystemAssigned"
			},
			"kind": "functionapp",
			"properties": {
				"name": "[variables('functionAppName')]",
				"serverFarmId": "[variables('hostingPlanResourceId')]",
				"siteConfig": {
					"appSettings": [
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "dotnet"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(variables('appInsightsResourceId'), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
							"value": "[reference(variables('appInsightsResourceId'), '2015-05-01').ConnectionString]"
						},
						{
							"name": "AzureWebJobsStorage",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountResourceId'), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
						},
						{
							"name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountResourceId'), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
						},
						{
							"name": "WEBSITE_CONTENTSHARE",
							"value": "functioncontent"
						}
					]
				}
			},
			"resources": [
				{
					"type": "config",
					"apiVersion": "2019-08-01",
					"name": "appsettings",
					"dependsOn": [
						"[variables('functionAppResourceId')]",
						"[variables('keyVaultResourceId')]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').AppInsightsConnectionString)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').AppInsightsInstrumentationKey)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').AzureWebJobsStorage)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').WebSiteContentAzureFileConnectionString)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').TenantId)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').PrivateDnsSubscriptionId)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').PrivateDnsResourceGroupName)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').DefaultPrivateDnsZone)]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets/', variables('keyVaultName'), variables('appSettings').HostnameTagName)]"
					],
					"properties": {
						"FUNCTIONS_EXTENSION_VERSION": "~3",
						"FUNCTIONS_WORKER_RUNTIME": "dotnet",
						"APPINSIGHTS_INSTRUMENTATIONKEY": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').AppInsightsInstrumentationKey)).secretUriWithVersion, ')')]",
						"APPLICATIONINSIGHTS_CONNECTION_STRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').AppInsightsConnectionString)).secretUriWithVersion, ')')]",
						"AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').AzureWebJobsStorage)).secretUriWithVersion, ')')]",
						"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').WebSiteContentAzureFileConnectionString)).secretUriWithVersion, ')')]",
						"WEBSITE_CONTENTSHARE": "functioncontent",
						"TenantId": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').TenantId)).secretUriWithVersion, ')')]",
						"PrivateDnsSubscriptionId": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').PrivateDnsSubscriptionId)).secretUriWithVersion, ')')]",
						"PrivateDnsResourceGroupName": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').PrivateDnsResourceGroupName)).secretUriWithVersion, ')')]",
						"DefaultPrivateDnsZone": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').DefaultPrivateDnsZone)).secretUriWithVersion, ')')]",
						"HostnameTagName": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appSettings').HostnameTagName)).secretUriWithVersion, ')')]"
					}
				},
				{
					"name": "MSDeploy",
					"type": "extensions",
					"location": "[parameters('location')]",
					"apiVersion": "2015-08-01",
					"dependsOn": [
						"[variables('functionAppResourceId')]"
					],
					"properties": {
						"packageUri": "[parameters('zipPackageUrl')]"
					}
				}
			]
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"apiVersion": "2019-09-01",
			"name": "[variables('keyVaultName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('functionAppResourceId')]"
			],
			"properties": {
				"enabledForDeployment": false,
				"enabledForTemplateDeployment": false,
				"enabledForDiskEncryption": false,
				"tenantId": "[parameters('tenantId')]",
				"sku": {
					"name": "Standard",
					"family": "A"
				},
				"accessPolicies": [
					{
						"tenantId": "[subscription().tenantId]",
						"objectId": "[reference(variables('functionAppResourceId'), '2016-08-01', 'Full').identity.principalId]",
						"permissions": {
							"secrets": [
								"get"
							]
						}
					}
				],
				"enableSoftDelete": true,
				"softDeleteRetentionInDays": 90
			},
			"resources": [
				{
					"type": "secrets",
					"name": "[variables('appSettings').AppInsightsInstrumentationKey]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('appInsightsResourceId')]"

					],
					"properties": {
						"value": "[reference(variables('appInsightsResourceId'), '2015-05-01').InstrumentationKey]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').AppInsightsConnectionString]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('appInsightsResourceId')]"

					],
					"properties": {
						"value": "[reference(variables('appInsightsResourceId'), '2015-05-01').ConnectionString]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').AzureWebJobsStorage]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountResourceId'), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').WebSiteContentAzureFileConnectionString]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountResourceId'), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').TenantId]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[parameters('tenantId')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').PrivateDnsSubscriptionId]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[parameters('privateDnsSubscriptionId')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').PrivateDnsResourceGroupName]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[parameters('privateDnsResourceGroupName')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').DefaultPrivateDnsZone]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[parameters('defaultPrivateDnsZone')]"
					}
				},
				{
					"type": "secrets",
					"name": "[variables('appSettings').HostnameTagName]",
					"apiVersion": "2015-06-01",
					"dependsOn": [
						"[variables('keyVaultResourceId')]",
						"[variables('storageAccountResourceId')]"

					],
					"properties": {
						"value": "[parameters('hostnameTagName')]"
					}
				}
			]
		}
	],
	"outputs": {
		"functionAppResourceId": {
			"type": "string",
			"value": "[variables('functionAppResourceId')]"
		}
	}
}